// =============================================
// MIXINS - Fonctions r√©utilisables
// =============================================

@use "sass:color";
@use './tokens' as *;
@forward './tokens';

// ==================== LAYOUT MIXINS ====================
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin grid-center {
  display: grid;
  place-items: center;
}

// ==================== BUTTON MIXINS ====================
@mixin btn-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $spacing-2;
  border: none;
  border-radius: $radius-lg;
  font-family: $font-family-primary;
  font-weight: $font-weight-medium;
  text-decoration: none;
  cursor: pointer;
  transition: $transition-all;
  user-select: none;
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  &:focus {
    @include focus-ring;
  }
}

@mixin btn-size($size: 'base') {
  @if $size == 'sm' {
    height: $btn-height-sm;
    padding: 0 $spacing-3;
    font-size: $font-size-sm;
  } @else if $size == 'lg' {
    height: $btn-height-lg;
    padding: 0 $spacing-6;
    font-size: $font-size-lg;
  } @else {
    height: $btn-height-base;
    padding: 0 $spacing-4;
    font-size: $font-size-base;
  }
}

@mixin btn-variant($variant: 'primary') {
  @if $variant == 'primary' {
    background: linear-gradient(135deg, $primary-500, $primary-600);
    color: $text-inverse;
    
    &:hover:not(:disabled) {
      background: linear-gradient(135deg, $primary-600, $primary-700);
      transform: translateY(-1px);
      box-shadow: $shadow-lg;
    }
  } @else if $variant == 'secondary' {
    background: $bg-secondary;
    color: $text-primary;
    border: 1px solid $border-light;
    
    &:hover:not(:disabled) {
      background: $bg-tertiary;
      border-color: $border-medium;
    }
  } @else if $variant == 'outline' {
    background: transparent;
    color: $primary-500;
    border: 2px solid $primary-500;
    
    &:hover:not(:disabled) {
      background: $primary-500;
      color: $text-inverse;
    }
  } @else if $variant == 'ghost' {
    background: transparent;
    color: $text-primary;
    
    &:hover:not(:disabled) {
      background: $bg-secondary;
    }
  } @else if $variant == 'danger' {
    background: linear-gradient(135deg, $error-500, $error-600);
    color: $text-inverse;
    
    &:hover:not(:disabled) {
      background: linear-gradient(135deg, $error-600, color.adjust($error-600, $lightness: -10%));
      transform: translateY(-1px);
      box-shadow: $shadow-lg;
    }
  }
}

// ==================== CARD MIXINS ====================
@mixin card-base {
  background: $bg-primary;
  border-radius: $radius-xl;
  border: 1px solid $border-light;
  overflow: hidden;
  transition: $transition-all;
}

@mixin card-hover {
  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-xl;
    border-color: $border-medium;
  }
}

@mixin card-padding($size: 'base') {
  @if $size == 'sm' {
    padding: $spacing-4;
  } @else if $size == 'lg' {
    padding: $spacing-8;
  } @else {
    padding: $spacing-6;
  }
}

// ==================== INPUT MIXINS ====================
@mixin input-base {
  width: 100%;
  border: 2px solid $border-light;
  border-radius: $radius-lg;
  background: $bg-primary;
  color: $text-primary;
  font-family: $font-family-primary;
  transition: $transition-colors;

  &::placeholder {
    color: $text-muted;
  }

  &:focus {
    outline: none;
    border-color: $primary-500;
    box-shadow: 0 0 0 3px rgba($primary-500, 0.1);
  }

  &:disabled {
    background: $bg-secondary;
    color: $text-disabled;
    cursor: not-allowed;
  }
}

@mixin input-size($size: 'base') {
  @if $size == 'sm' {
    height: $input-height-sm;
    padding: 0 $spacing-3;
    font-size: $font-size-sm;
  } @else if $size == 'lg' {
    height: $input-height-lg;
    padding: 0 $spacing-4;
    font-size: $font-size-lg;
  } @else {
    height: $input-height-base;
    padding: 0 $spacing-4;
    font-size: $font-size-base;
  }
}

// ==================== TYPOGRAPHY MIXINS ====================
@mixin heading($level: 1) {
  font-family: $font-family-primary;
  font-weight: $font-weight-bold;
  line-height: $line-height-tight;
  color: $text-primary;
  margin: 0 0 $spacing-4 0;

  @if $level == 1 {
    font-size: $font-size-3xl;
    @media (min-width: $breakpoint-md) {
      font-size: $font-size-4xl;
    }
    @media (min-width: $breakpoint-lg) {
      font-size: $font-size-5xl;
    }
  } @else if $level == 2 {
    font-size: $font-size-2xl;
    @media (min-width: $breakpoint-md) {
      font-size: $font-size-3xl;
    }
  } @else if $level == 3 {
    font-size: $font-size-xl;
    @media (min-width: $breakpoint-md) {
      font-size: $font-size-2xl;
    }
  } @else if $level == 4 {
    font-size: $font-size-lg;
    @media (min-width: $breakpoint-md) {
      font-size: $font-size-xl;
    }
  } @else if $level == 5 {
    font-size: $font-size-base;
    @media (min-width: $breakpoint-md) {
      font-size: $font-size-lg;
    }
  } @else if $level == 6 {
    font-size: $font-size-sm;
    @media (min-width: $breakpoint-md) {
      font-size: $font-size-base;
    }
  }
}

@mixin text-style($style: 'body') {
  font-family: $font-family-primary;
  line-height: $line-height-normal;

  @if $style == 'body' {
    font-size: $font-size-base;
    color: $text-primary;
  } @else if $style == 'body-sm' {
    font-size: $font-size-sm;
    color: $text-primary;
  } @else if $style == 'body-lg' {
    font-size: $font-size-lg;
    color: $text-primary;
  } @else if $style == 'caption' {
    font-size: $font-size-xs;
    color: $text-muted;
  } @else if $style == 'lead' {
    font-size: $font-size-lg;
    color: $text-secondary;
    line-height: $line-height-relaxed;
  }
}

// ==================== ANIMATION MIXINS ====================
@mixin fade-in($duration: $transition-base) {
  animation: fade-in $duration ease-in-out;

  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

@mixin slide-up($duration: $transition-base, $distance: 20px) {
  animation: slide-up $duration ease-out;

  @keyframes slide-up {
    from {
      opacity: 0;
      transform: translateY($distance);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

@mixin scale-in($duration: $transition-base) {
  animation: scale-in $duration ease-out;

  @keyframes scale-in {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
}

// ==================== RESPONSIVE MIXINS ====================
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'xs' {
    @media (min-width: $breakpoint-xs) {
      @content;
    }
  } @else if $breakpoint == 'sm' {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == 'md' {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == 'lg' {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == 'xl' {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  } @else if $breakpoint == '2xl' {
    @media (min-width: $breakpoint-2xl) {
      @content;
    }
  }
}

@mixin mobile-only {
  @media (max-width: #{$breakpoint-md - 1px}) {
    @content;
  }
}

@mixin tablet-and-up {
  @media (min-width: $breakpoint-md) {
    @content;
  }
}

@mixin desktop-only {
  @media (min-width: $breakpoint-lg) {
    @content;
  }
}

// ==================== UTILITY MIXINS ====================
@mixin visually-hidden {
  @include sr-only;
}

@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin aspect-ratio($ratio: 1) {
  aspect-ratio: $ratio;
  
  // Fallback for older browsers
  @supports not (aspect-ratio: 1) {
    &::before {
      content: '';
      float: left;
      padding-bottom: #{100% / $ratio};
    }
    
    &::after {
      content: '';
      display: table;
      clear: both;
    }
  }
}

@mixin glassmorphism {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}
